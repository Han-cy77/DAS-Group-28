---
title: "Group_28_Analysis.qmd"
format: html
editor: visual
---

# 1. Background and Target of Research

This dataset was collected from the US 1994 Census database, which contains demographic and socioeconomic data of individuals. The dataset include several variables that are crucial for understanding the factors influencing income levels. Below is a description of each variable and its relevance to the research:

-   **Age**: The age of the individual, measured in years. Age can be a significant factor influencing income, as individuals in different age groups may have different levels of experience, job opportunities, and earning potential.
-   **Education**: The highest level of education attained by the individual. This variable records the educational background of the person, which is often a strong predictor of income. Higher education levels are generally associated with higher-paying jobs.
-   **Marital_Status**: The marital status may affect income through various social and economic factors, such as household income or access to benefits.
-   **Occupation**: The occupation of the individual. Different occupations have different income levels, and certain jobs may be more likely to offer higher wages.
-   **Sex**: The sex of the individual. Gender may play a role in income, as men and women have experienced different pay scales for the same or similar work.
-   **Hours_PW**: The number of hours worked per week by the individual. Income is often correlated with the number of hours worked, as individuals working longer hours may earn more.
-   **Nationality**: The nationality of birth of the individual.
-   **Income**: The response variable in the dataset, which indicates whether the individual earns more than \$50k per year (`>50k`) or less than or equal to \$50k (`<=50k`). This is the variable of interest in this study, as the goal is to determine which factors influence an individualâ€™s income level.

In this research, the target is to identify the factors that influence whether an individual earns more than \$50k per year. A Generalized Linear Model (GLM) will be applied to explore how variables like age, education level, marital status, occupation, sex, hours worked per week, and nationality contribute to income levels. The findings will help understand the key factors that determine high income and inform policies related to employment, education, and socioeconomic conditions.

# 2. Exploratory Data analysis

## 1. Import data and modify the columns

```{r}
#| message: false
library(dplyr)
# import dataset and handle missing values
original_data <- read.csv('dataset28.csv', na.strings = '?,')
sum(is.na(original_data))
original_data <- na.omit(original_data)
dim(original_data)

# modify the Education column
# use 'Higher' to represent higher education level
# use 'Lower' to represent lower education level
unique(original_data$Education)
modified_data <- original_data
modified_data$Education_level <- ifelse(original_data$Education %in% c("Bachelors,", "Masters,", "Doctorate,", "Prof-school,", "Assoc-acdm,", "Assoc-voc,", "Some-college,"),"Higher", "Lower")

# modify the Marital_Status column
# use 'Yes' or 'No' to represent whether a person has or not has 
unique(original_data$Marital_Status)
modified_data$Has_partner <- ifelse(original_data$Marital_Status %in% c("Married-civ-spouse,", "Married-AF-spouse,"), "Yes", "No")

# modify the Nationality column
unique(original_data$Nationality)
modified_data$Nationality <- ifelse(original_data$Nationality %in% c('United-States,'), 'US_mainland', 'Others')

# delete useless columns
modified_data <- modified_data %>% 
  select(-c(Education, Marital_Status, ))

# modify other columns
columns_to_clean <- c('Occupation', 'Sex', 'Hours_PW')
modified_data[columns_to_clean] <- lapply(modified_data[columns_to_clean], function(x) gsub(",$", "", x))

# check the modified data
dim(modified_data)
summary(modified_data)
str(modified_data)
modified_data$Hours_PW <- as.integer(modified_data$Hours_PW)
```

## 2. Check for Multi-Collinearity issues

```{r}
#| message: false
library(car)
# convert all variables including categorical variables into numeric variables
modified_data_numeric <- modified_data %>%
  mutate_if(is.character, as.factor) %>%
  mutate_if(is.factor, as.numeric)

VIF_model <- lm(Income ~ ., data = modified_data_numeric)

# calculate VIF
vif_values <- vif(VIF_model)
print(vif_values)

high_vif <- vif_values[vif_values > 10]
if (length(high_vif) > 0) {
  print("Variables with multicollinearity problem:")
  print(high_vif)
} else {
  print("There is no serious multicollinearity problem.")
}
```

## 3. Check sample balance

```{r}
#| message: false
# calculate the sample sizes and proportions of different response
table(modified_data$Income)
prop.table(table(modified_data$Income))
```

## 4. Data visualization

Use chart and plots to summarize the data set.

```{r}
#| message: false
library(ggplot2)
library(knitr)

# Contingency Tables and Barplots for Categorical variables
# Occupation
Occupation_Income_table <- table(modified_data$Occupation, modified_data$Income)
Occupation_proportion <- prop.table(Occupation_Income_table)

kable(Occupation_Income_table, caption = "Contingency Table: Occupation vs Income")
kable(Occupation_proportion, caption = "Proportion Table: Occupation vs Income")


ggplot(data = modified_data, mapping = aes(x = Occupation, fill = Income)) +
  geom_bar(position = 'dodge') +
  scale_fill_manual(values = c("<=50K" = "#003B5C", ">50K" =
                                 "#ff7f0e")) +
  labs(title = 'Occupation vs Income', x = "Occupation",
       y = "Count") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
```

```{r}
#| message: false
# Sex
Sex_Income_table <- table(modified_data$Sex, modified_data$Income)
Sex_proportion <- prop.table(Sex_Income_table)

kable(Sex_Income_table, caption = "Contingency Table: Sex vs Income")
kable(Sex_proportion, caption = "Proportion Table: Sex vs Income")

ggplot(data = modified_data, mapping = aes(x = Sex, fill = Income)) +
  geom_bar(position = 'dodge') +
  scale_fill_manual(values = c("<=50K" = "#003B5C", ">50K" =
                                 "#ff7f0e")) +
  labs(title = 'Sex vs Income', x = "Sex",
       y = "Count") +
  theme_minimal()
```

```{r}
#| message: false
# Nationality
Nationality_Income_table <- table(modified_data$Nationality, modified_data$Income)
Nationality_proportion <- prop.table(Nationality_Income_table)

kable(Nationality_Income_table, caption = "Contingency Table: Nationality vs Income")
kable(Nationality_proportion, caption = "Proportion Table: Nationality vs Income")

ggplot(data = modified_data, mapping = aes(x = Nationality, fill = Income)) +
  geom_bar(position = 'dodge') +
  scale_fill_manual(values = c("<=50K" = "#003B5C", ">50K" =
                                 "#ff7f0e")) +
  labs(title = 'Nationality vs Income', x = "Nationality",
       y = "Count") +
  theme_minimal()
```

```{r}
#| message: false
# Education level
Education_Income_table <- table(modified_data$Education_level, modified_data$Income)
Education_proportion <- prop.table(Education_Income_table)

kable(Education_Income_table, caption = "Contingency Table: Education level vs Income")
kable(Education_proportion, caption = "Proportion Table: Education level vs Income")

ggplot(data = modified_data, mapping = aes(x = Education_level, fill = Income)) +
  geom_bar(position = 'dodge') +
  scale_fill_manual(values = c("<=50K" = "#003B5C", ">50K" =
                                 "#ff7f0e")) +
  labs(title = 'Education level vs Income', x = "Education level",
       y = "Count") +
  theme_minimal()
```

```{r}
#| message: false
# Partner
Partner_Income_table <- table(modified_data$Has_partner, modified_data$Income)
Partner_proportion <- prop.table(Partner_Income_table)

kable(Partner_Income_table, caption = "Contingency Table: Partner vs Income")
kable(Partner_proportion, caption = "Proportion Table: Partner vs Income")

ggplot(data = modified_data, mapping = aes(x = Has_partner, fill = Income)) +
  geom_bar(position = 'dodge') +
  scale_fill_manual(values = c("<=50K" = "#003B5C", ">50K" =
                                 "#ff7f0e")) +
  labs(title = 'Partner vs Income', x = "Partner",
       y = "Count") +
  theme_minimal()
```

```{r}
#| message: false
# Violin plots and boxplots for numerical continuous variables
# Age
ggplot(data = modified_data, aes(x = Income, y = Age, fill = Income)) +
  geom_violin(col = 'transparent') +
  scale_fill_manual(values = c("<=50K" = "#7f7f7f", ">50K" =
                                 "#ffdd57")) +
  labs(title = "Age vs Income", x = "Income", y = "Age") +
  theme_minimal()

ggplot(modified_data, aes(x = Income, y = Age, fill = Income)) +
  geom_boxplot() +
  labs(title = "Age vs Income", x = "Age", y = "Hours per Week") +
  theme_minimal()

# Hours per week
ggplot(data = modified_data, aes(x = Income, y = Hours_PW, fill = Income)) +
  geom_violin(col = 'transparent') +
  scale_fill_manual(values = c("<=50K" = "#7f7f7f", ">50K" =
                                 "#ffdd57")) +
  labs(title = "Hours Per Week vs Income", x = "Income", y = "Hours_PW") +
  theme_minimal()

ggplot(modified_data, aes(x = Income, y = Hours_PW, fill = Income)) +
  geom_boxplot() +
  labs(title = "Hours Per Week vs Income", x = "Income", y = "Hours per Week") +
  theme_minimal()
```

# 3. Data Splitting: Training set and Test set

```{r}
#| message: false
library(caret)
# set random seed
set.seed(123)

# create training index for stratified sampling
training_index <- createDataPartition(modified_data$Income, p = 0.8, list = FALSE)

# split data into training data and test data
training_data <- modified_data[training_index, ]
test_data  <- modified_data[-training_index, ]
str(training_data)
str(test_data)

# check dimension
dim(training_data)
dim(test_data)

# check distribution in both datasets
prop.table(table(training_data$Income))
prop.table(table(test_data$Income))
```
